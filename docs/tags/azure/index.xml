<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Azure on My digital journey</title>
    <link>https://irwins.github.io/blog/tags/azure/</link>
    <description>Recent content in Azure on My digital journey</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Jun 2024 15:24:38 +0200</lastBuildDate>
    <atom:link href="https://irwins.github.io/blog/tags/azure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pester Validation Deployments</title>
      <link>https://irwins.github.io/blog/posts/pester-validation-deployments/</link>
      <pubDate>Fri, 28 Jun 2024 15:24:38 +0200</pubDate>
      <guid>https://irwins.github.io/blog/posts/pester-validation-deployments/</guid>
      <description>Previously, I had a look at the bicep testing framework. The assertions done are more to validate parameter,variables and resource names. You can&amp;rsquo;t assert resource size, or properties, as they depend on runtime deployment. I think pester will be a great fit for this &amp;#x1f609;&#xA;Pester is the test framework for PowerShell! When I first got introduced to pester it was for unit testing. As someone who identifies with OPS, it didn&amp;rsquo;t resonate with me, until I saw Kevin Marquette use pester to validate outcome of what a script was suppose to do.</description>
    </item>
  </channel>
</rss>
